name: ci

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds by branch
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
  # If there is already a workflow running for the same pull request, cancel it
  # For non-PR triggers queue up builds
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:    
    runs-on: macos-latest
    strategy:
      matrix:
        test-type: [unit-tests, integration-tests, build-example-wallet, build-example-dapp]

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup Xcode Version
      uses: maxim-lobanov/setup-xcode@v1

    - uses: actions/cache@v2
      with:
        path: |
          .build
          SourcePackages
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - uses: ./.github/actions/ci
      with:
        type: ${{ matrix.test-type }}

  test-ui:
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    strategy:
      matrix:
        test-type: [ui-tests]

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup Xcode Version
      uses: maxim-lobanov/setup-xcode@v1

    - uses: actions/cache@v2
      with:
        path: |
          .build
          SourcePackages
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - uses: ./.github/actions/ci
      with:
        type: ${{ matrix.test-type }}
